#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ejemplo2aLINQ
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Muestra2")]
	public partial class MuestraDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertDepartamentos(Departamentos instance);
    partial void UpdateDepartamentos(Departamentos instance);
    partial void DeleteDepartamentos(Departamentos instance);
    partial void InsertEmpleados(Empleados instance);
    partial void UpdateEmpleados(Empleados instance);
    partial void DeleteEmpleados(Empleados instance);
    #endregion
		
		public MuestraDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Muestra2ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MuestraDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MuestraDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MuestraDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MuestraDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Departamentos> Departamentos
		{
			get
			{
				return this.GetTable<Departamentos>();
			}
		}
		
		public System.Data.Linq.Table<Empleados> Empleados
		{
			get
			{
				return this.GetTable<Empleados>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Departamentos")]
	public partial class Departamentos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idDept;
		
		private string _Departamento;
		
		private string _Ubicacion;
		
		private EntitySet<Empleados> _Empleados;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidDeptChanging(int value);
    partial void OnidDeptChanged();
    partial void OnDepartamentoChanging(string value);
    partial void OnDepartamentoChanged();
    partial void OnUbicacionChanging(string value);
    partial void OnUbicacionChanged();
    #endregion
		
		public Departamentos()
		{
			this._Empleados = new EntitySet<Empleados>(new Action<Empleados>(this.attach_Empleados), new Action<Empleados>(this.detach_Empleados));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDept", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idDept
		{
			get
			{
				return this._idDept;
			}
			set
			{
				if ((this._idDept != value))
				{
					this.OnidDeptChanging(value);
					this.SendPropertyChanging();
					this._idDept = value;
					this.SendPropertyChanged("idDept");
					this.OnidDeptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Departamento", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Departamento
		{
			get
			{
				return this._Departamento;
			}
			set
			{
				if ((this._Departamento != value))
				{
					this.OnDepartamentoChanging(value);
					this.SendPropertyChanging();
					this._Departamento = value;
					this.SendPropertyChanged("Departamento");
					this.OnDepartamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ubicacion", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Ubicacion
		{
			get
			{
				return this._Ubicacion;
			}
			set
			{
				if ((this._Ubicacion != value))
				{
					this.OnUbicacionChanging(value);
					this.SendPropertyChanging();
					this._Ubicacion = value;
					this.SendPropertyChanged("Ubicacion");
					this.OnUbicacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Departamentos_Empleados", Storage="_Empleados", ThisKey="idDept", OtherKey="idDept")]
		public EntitySet<Empleados> Empleados
		{
			get
			{
				return this._Empleados;
			}
			set
			{
				this._Empleados.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Empleados(Empleados entity)
		{
			this.SendPropertyChanging();
			entity.Departamentos = this;
		}
		
		private void detach_Empleados(Empleados entity)
		{
			this.SendPropertyChanging();
			entity.Departamentos = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Empleados")]
	public partial class Empleados : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idEmp;
		
		private string _Nombre;
		
		private string _Apellido;
		
		private string _Genero;
		
		private decimal _Salario;
		
		private int _idDept;
		
		private EntityRef<Departamentos> _Departamentos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidEmpChanging(int value);
    partial void OnidEmpChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellidoChanging(string value);
    partial void OnApellidoChanged();
    partial void OnGeneroChanging(string value);
    partial void OnGeneroChanged();
    partial void OnSalarioChanging(decimal value);
    partial void OnSalarioChanged();
    partial void OnidDeptChanging(int value);
    partial void OnidDeptChanged();
    #endregion
		
		public Empleados()
		{
			this._Departamentos = default(EntityRef<Departamentos>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEmp", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idEmp
		{
			get
			{
				return this._idEmp;
			}
			set
			{
				if ((this._idEmp != value))
				{
					this.OnidEmpChanging(value);
					this.SendPropertyChanging();
					this._idEmp = value;
					this.SendPropertyChanged("idEmp");
					this.OnidEmpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellido", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Apellido
		{
			get
			{
				return this._Apellido;
			}
			set
			{
				if ((this._Apellido != value))
				{
					this.OnApellidoChanging(value);
					this.SendPropertyChanging();
					this._Apellido = value;
					this.SendPropertyChanged("Apellido");
					this.OnApellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Genero", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Genero
		{
			get
			{
				return this._Genero;
			}
			set
			{
				if ((this._Genero != value))
				{
					this.OnGeneroChanging(value);
					this.SendPropertyChanging();
					this._Genero = value;
					this.SendPropertyChanged("Genero");
					this.OnGeneroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salario", DbType="Money NOT NULL")]
		public decimal Salario
		{
			get
			{
				return this._Salario;
			}
			set
			{
				if ((this._Salario != value))
				{
					this.OnSalarioChanging(value);
					this.SendPropertyChanging();
					this._Salario = value;
					this.SendPropertyChanged("Salario");
					this.OnSalarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDept", DbType="Int NOT NULL")]
		public int idDept
		{
			get
			{
				return this._idDept;
			}
			set
			{
				if ((this._idDept != value))
				{
					if (this._Departamentos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDeptChanging(value);
					this.SendPropertyChanging();
					this._idDept = value;
					this.SendPropertyChanged("idDept");
					this.OnidDeptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Departamentos_Empleados", Storage="_Departamentos", ThisKey="idDept", OtherKey="idDept", IsForeignKey=true)]
		public Departamentos Departamentos
		{
			get
			{
				return this._Departamentos.Entity;
			}
			set
			{
				Departamentos previousValue = this._Departamentos.Entity;
				if (((previousValue != value) 
							|| (this._Departamentos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Departamentos.Entity = null;
						previousValue.Empleados.Remove(this);
					}
					this._Departamentos.Entity = value;
					if ((value != null))
					{
						value.Empleados.Add(this);
						this._idDept = value.idDept;
					}
					else
					{
						this._idDept = default(int);
					}
					this.SendPropertyChanged("Departamentos");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
